circuit Alu : @[:@2.0]
  module Alu : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_A : UInt<32> @[:@6.4]
    input io_B : UInt<32> @[:@6.4]
    input io_Op : UInt<4> @[:@6.4]
    output io_Out : UInt<32> @[:@6.4]
    output io_Sum : UInt<32> @[:@6.4]
  
    node shamt = bits(io_B, 4, 0) @[Alu.scala 34:19:@8.4]
    node _T_20 = add(io_A, io_B) @[Alu.scala 37:25:@9.4]
    node _T_21 = tail(_T_20, 1) @[Alu.scala 37:25:@10.4]
    node _T_22 = sub(io_A, io_B) @[Alu.scala 38:25:@11.4]
    node _T_23 = asUInt(_T_22) @[Alu.scala 38:25:@12.4]
    node _T_24 = tail(_T_23, 1) @[Alu.scala 38:25:@13.4]
    node _T_25 = and(io_A, io_B) @[Alu.scala 39:25:@14.4]
    node _T_26 = or(io_A, io_B) @[Alu.scala 40:25:@15.4]
    node _T_27 = xor(io_A, io_B) @[Alu.scala 41:25:@16.4]
    node _T_28 = asSInt(io_A) @[Alu.scala 42:25:@17.4]
    node _T_29 = asSInt(io_B) @[Alu.scala 42:39:@18.4]
    node _T_30 = lt(_T_28, _T_29) @[Alu.scala 42:32:@19.4]
    node _T_31 = dshl(io_A, shamt) @[Alu.scala 43:25:@20.4]
    node _T_32 = lt(io_A, io_B) @[Alu.scala 44:25:@21.4]
    node _T_33 = dshr(io_A, shamt) @[Alu.scala 45:25:@22.4]
    node _T_34 = asSInt(io_A) @[Alu.scala 46:25:@23.4]
    node _T_35 = dshr(_T_34, shamt) @[Alu.scala 46:32:@24.4]
    node _T_36 = asUInt(_T_35) @[Alu.scala 46:42:@25.4]
    node _T_37 = eq(UInt<4>("hb"), io_Op) @[Mux.scala 46:19:@26.4]
    node _T_38 = mux(_T_37, io_B, io_B) @[Mux.scala 46:16:@27.4]
    node _T_39 = eq(UInt<4>("ha"), io_Op) @[Mux.scala 46:19:@28.4]
    node _T_40 = mux(_T_39, io_A, _T_38) @[Mux.scala 46:16:@29.4]
    node _T_41 = eq(UInt<4>("h9"), io_Op) @[Mux.scala 46:19:@30.4]
    node _T_42 = mux(_T_41, _T_36, _T_40) @[Mux.scala 46:16:@31.4]
    node _T_43 = eq(UInt<4>("h8"), io_Op) @[Mux.scala 46:19:@32.4]
    node _T_44 = mux(_T_43, _T_33, _T_42) @[Mux.scala 46:16:@33.4]
    node _T_45 = eq(UInt<4>("h7"), io_Op) @[Mux.scala 46:19:@34.4]
    node _T_46 = mux(_T_45, _T_32, _T_44) @[Mux.scala 46:16:@35.4]
    node _T_47 = eq(UInt<4>("h6"), io_Op) @[Mux.scala 46:19:@36.4]
    node _T_48 = mux(_T_47, _T_31, _T_46) @[Mux.scala 46:16:@37.4]
    node _T_49 = eq(UInt<4>("h5"), io_Op) @[Mux.scala 46:19:@38.4]
    node _T_50 = mux(_T_49, _T_30, _T_48) @[Mux.scala 46:16:@39.4]
    node _T_51 = eq(UInt<4>("h4"), io_Op) @[Mux.scala 46:19:@40.4]
    node _T_52 = mux(_T_51, _T_27, _T_50) @[Mux.scala 46:16:@41.4]
    node _T_53 = eq(UInt<4>("h3"), io_Op) @[Mux.scala 46:19:@42.4]
    node _T_54 = mux(_T_53, _T_26, _T_52) @[Mux.scala 46:16:@43.4]
    node _T_55 = eq(UInt<4>("h2"), io_Op) @[Mux.scala 46:19:@44.4]
    node _T_56 = mux(_T_55, _T_25, _T_54) @[Mux.scala 46:16:@45.4]
    node _T_57 = eq(UInt<4>("h1"), io_Op) @[Mux.scala 46:19:@46.4]
    node _T_58 = mux(_T_57, _T_24, _T_56) @[Mux.scala 46:16:@47.4]
    node _T_59 = eq(UInt<4>("h0"), io_Op) @[Mux.scala 46:19:@48.4]
    node _T_60 = mux(_T_59, _T_21, _T_58) @[Mux.scala 46:16:@49.4]
    node _T_61 = bits(io_Op, 0, 0) @[Alu.scala 49:29:@51.4]
    node _T_63 = sub(UInt<1>("h0"), io_B) @[Alu.scala 49:33:@52.4]
    node _T_64 = asUInt(_T_63) @[Alu.scala 49:33:@53.4]
    node _T_65 = tail(_T_64, 1) @[Alu.scala 49:33:@54.4]
    node _T_66 = mux(_T_61, _T_65, io_B) @[Alu.scala 49:23:@55.4]
    node _T_67 = add(io_A, _T_66) @[Alu.scala 49:18:@56.4]
    node _T_68 = tail(_T_67, 1) @[Alu.scala 49:18:@57.4]
    io_Out <= bits(_T_60, 31, 0)
    io_Sum <= _T_68
