;buildInfoPackage: chisel3, version: 3.0.2, scalaVersion: 2.11.11, sbtVersion: 0.13.16, builtAtString: 2018-02-05 23:25:31.873, builtAtMillis: 1517873131873
circuit dAlu : 
  module dAlu : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip opcode : UInt<7>, flip in_8bit1_rs1 : UInt<8>, flip in_8bit1_rs2 : UInt<8>, flip in_8bit2_rs1 : UInt<8>, flip in_8bit2_rs2 : UInt<8>, flip in_16bit_rs1 : UInt<16>, flip in_16bit_rs2 : UInt<16>, flip in_32bit_rs1 : UInt<32>, flip in_32bit_rs2 : UInt<32>, out : UInt<32>}
    
    node _T_23 = asSInt(io.in_8bit1_rs1) @[dAlu.scala 25:35]
    node _T_24 = asSInt(io.in_8bit1_rs2) @[dAlu.scala 25:60]
    node _T_25 = add(_T_23, _T_24) @[dAlu.scala 25:42]
    node _T_26 = tail(_T_25, 1) @[dAlu.scala 25:42]
    node _T_27 = asSInt(_T_26) @[dAlu.scala 25:42]
    node _T_28 = asUInt(_T_27) @[dAlu.scala 25:68]
    node _T_29 = add(io.in_8bit1_rs1, io.in_8bit1_rs2) @[dAlu.scala 26:35]
    node _T_30 = tail(_T_29, 1) @[dAlu.scala 26:35]
    node _T_31 = eq(UInt<7>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_32 = mux(_T_31, _T_30, UInt<8>("h00")) @[Mux.scala 46:16]
    node _T_33 = eq(UInt<7>("h00"), io.opcode) @[Mux.scala 46:19]
    node out_8bit1 = mux(_T_33, _T_28, _T_32) @[Mux.scala 46:16]
    node _T_35 = asSInt(io.in_8bit2_rs1) @[dAlu.scala 28:35]
    node _T_36 = asSInt(io.in_8bit2_rs2) @[dAlu.scala 28:58]
    node _T_37 = add(_T_35, _T_36) @[dAlu.scala 28:41]
    node _T_38 = tail(_T_37, 1) @[dAlu.scala 28:41]
    node _T_39 = asSInt(_T_38) @[dAlu.scala 28:41]
    node _T_40 = asUInt(_T_39) @[dAlu.scala 28:66]
    node _T_41 = add(io.in_8bit2_rs1, io.in_8bit2_rs2) @[dAlu.scala 29:34]
    node _T_42 = tail(_T_41, 1) @[dAlu.scala 29:34]
    node _T_43 = eq(UInt<7>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_44 = mux(_T_43, _T_42, UInt<8>("h00")) @[Mux.scala 46:16]
    node _T_45 = eq(UInt<7>("h00"), io.opcode) @[Mux.scala 46:19]
    node out_8bit2 = mux(_T_45, _T_40, _T_44) @[Mux.scala 46:16]
    node _T_47 = asSInt(io.in_16bit_rs1) @[dAlu.scala 31:35]
    node _T_48 = asSInt(io.in_16bit_rs2) @[dAlu.scala 31:58]
    node _T_49 = add(_T_47, _T_48) @[dAlu.scala 31:41]
    node _T_50 = tail(_T_49, 1) @[dAlu.scala 31:41]
    node _T_51 = asSInt(_T_50) @[dAlu.scala 31:41]
    node _T_52 = asUInt(_T_51) @[dAlu.scala 31:66]
    node _T_53 = add(io.in_16bit_rs1, io.in_16bit_rs2) @[dAlu.scala 32:34]
    node _T_54 = tail(_T_53, 1) @[dAlu.scala 32:34]
    node _T_55 = eq(UInt<7>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_56 = mux(_T_55, _T_54, UInt<8>("h00")) @[Mux.scala 46:16]
    node _T_57 = eq(UInt<7>("h00"), io.opcode) @[Mux.scala 46:19]
    node out_16bit = mux(_T_57, _T_52, _T_56) @[Mux.scala 46:16]
    node _T_59 = asSInt(io.in_32bit_rs1) @[dAlu.scala 34:35]
    node _T_60 = asSInt(io.in_32bit_rs2) @[dAlu.scala 34:58]
    node _T_61 = add(_T_59, _T_60) @[dAlu.scala 34:41]
    node _T_62 = tail(_T_61, 1) @[dAlu.scala 34:41]
    node _T_63 = asSInt(_T_62) @[dAlu.scala 34:41]
    node _T_64 = asUInt(_T_63) @[dAlu.scala 34:66]
    node _T_65 = add(io.in_32bit_rs1, io.in_32bit_rs2) @[dAlu.scala 35:34]
    node _T_66 = tail(_T_65, 1) @[dAlu.scala 35:34]
    node _T_67 = eq(UInt<7>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_68 = mux(_T_67, _T_66, UInt<8>("h00")) @[Mux.scala 46:16]
    node _T_69 = eq(UInt<7>("h00"), io.opcode) @[Mux.scala 46:19]
    node out_32bit = mux(_T_69, _T_64, _T_68) @[Mux.scala 46:16]
    node _T_71 = cat(out_8bit2, UInt<8>("h00")) @[Cat.scala 30:58]
    node _T_72 = add(out_8bit1, _T_71) @[dAlu.scala 37:18]
    node _T_73 = tail(_T_72, 1) @[dAlu.scala 37:18]
    node _T_75 = cat(out_16bit, UInt<8>("h00")) @[Cat.scala 30:58]
    node _T_76 = add(_T_73, _T_75) @[dAlu.scala 37:42]
    node _T_77 = tail(_T_76, 1) @[dAlu.scala 37:42]
    node _T_78 = add(_T_77, out_32bit) @[dAlu.scala 37:66]
    node _T_79 = tail(_T_78, 1) @[dAlu.scala 37:66]
    io.out <= _T_79 @[dAlu.scala 37:7]
    
